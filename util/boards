#! /usr/bin/env python
"""
This program generates an up to date list of boards that accept tripcodes and an
up to date list of all boards.
"""

import json
import urllib2
import sys

blacklist = ['b', 'soc', 's4s', 'q']

format_string = (
"""# THIS FILE IS AUTO-GENERATED BY THE `util/boards` SCRIPT FROM THE BASE
# DIRECTORY, DO NOT EDIT THIS FILE BUT EDIT THE SCRIPT ITSELF AND THEN
# PIPE THE OUTPUT TO THIS FILE.

__all__ = [{0!r}, {1!r}]

{0} = {2}

{1} = {3}"""
)

def pretty_print_list (names):
    """
    Pretty prints a list by writing 5 entries on each line.

    Returns the pretty print as a string.
    """
    strings = []

    # find longest name in each column for pretty print
    pplength = [0]*5
    for i, name in enumerate(names):
        if pplength[i % 5] < len(name) + 3:
            pplength[i % 5] = len(name) + 3

    # first column should be indented
    pplength[0] += 3
    # create format strings based on length
    ppstr = map(lambda d : '%%%ds' % d, pplength)

    # ugly code for a pretty print
    strings.append('[')
    for i, name in enumerate(names):
        if not i % 5:
            strings.append('\n')

        strings.append(ppstr[i % 5] % repr(name))

        if name is names[-1]:
            break

        strings.append(',')
    strings.append('\n')
    strings.append(']')

    return ''.join(strings)

if __name__ == '__main__':
    # get list of boards
    contents = urllib2.urlopen('http://a.4cdn.org/boards.json').read()
    boards   = json.loads(contents)['boards']

    all_boards = map (
        lambda board : str(board['board']),
        boards
    )
    all_boards.sort()

    trip_boards = filter (
        lambda board : board not in blacklist,
        all_boards
    )

    all_boards_str = pretty_print_list(all_boards)
    trip_boards_str = pretty_print_list(trip_boards) 

    print format_string.format (
        'boards', 'all_boards',
        trip_boards_str, all_boards_str
    )
